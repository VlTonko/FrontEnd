{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/GardianNews/src/RegistrContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/React.createContext();\n\nconst RegistrContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isLogin, setIsLogin] = useState('Fry');\n\n  const addLogin = login => {\n    setIsLogin(login);\n  };\n\n  const showLogin = _ref2 => {\n    let {\n      login\n    } = _ref2;\n    setIsLogin({\n      login\n    }); // setTimeout(clearNotification, 3000);\n  }; //\n  // const clearNotification = () => {\n  //     setIsOnline({\n  //         type: '', //\"sucess\" | \"fail\"\n  //         message: '',\n  //     })\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      login: isLogin,\n      addLogin,\n      showLogin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegistrContextProvider, \"3asDjMUHTkRTZrXedOWM1eEi9Lw=\");\n\n_c = RegistrContextProvider;\nexport { RegistrContextProvider, Context as RegistrContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrContextProvider\");","map":{"version":3,"sources":["/home/user/Desktop/GardianNews/src/RegistrContext.js"],"names":["React","useState","Context","createContext","RegistrContextProvider","children","isLogin","setIsLogin","addLogin","login","showLogin","RegistrContext"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,OAAO,gBAAGF,KAAK,CAACG,aAAN,EAAhB;;AAEA,MAAMC,sBAAsB,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAC3C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMO,QAAQ,GAAIC,KAAD,IAAW;AACxBF,IAAAA,UAAU,CAACE,KAAD,CAAV;AACH,GAFD;;AAIA,QAAMC,SAAS,GAAG,SAAa;AAAA,QAAZ;AAACD,MAAAA;AAAD,KAAY;AAC3BF,IAAAA,UAAU,CAAC;AAACE,MAAAA;AAAD,KAAD,CAAV,CAD2B,CAE3B;AACH,GAHD,CAP2C,CAW3C;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAG;AAACA,MAAAA,KAAK,EAAEH,OAAR;AAAiBE,MAAAA,QAAjB;AAA2BE,MAAAA;AAA3B,KAA1B;AAAA,cACKL;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxBD;;GAAMD,sB;;KAAAA,sB;AA0BN,SAAQA,sBAAR,EAAgCF,OAAO,IAAIS,cAA3C","sourcesContent":["import React, {useState} from \"react\";\n\nconst Context = React.createContext();\n\nconst RegistrContextProvider = ({children}) => {\n    const [isLogin, setIsLogin] = useState('Fry');\n\n    const addLogin = (login) => {\n        setIsLogin(login);\n    }\n\n    const showLogin = ({login}) => {\n        setIsLogin({login});\n        // setTimeout(clearNotification, 3000);\n    };\n    //\n    // const clearNotification = () => {\n    //     setIsOnline({\n    //         type: '', //\"sucess\" | \"fail\"\n    //         message: '',\n    //     })\n    // }\n\n    return (\n        <Context.Provider value={ {login: isLogin, addLogin, showLogin }}>\n            {children}\n        </Context.Provider>\n    );\n}\n\nexport {RegistrContextProvider, Context as RegistrContext}"]},"metadata":{},"sourceType":"module"}