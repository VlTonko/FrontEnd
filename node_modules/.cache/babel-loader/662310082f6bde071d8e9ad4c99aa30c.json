{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/GardianNews/src/NotificationContent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/React.createContext();\n\nconst NotificationContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, setState] = useState({\n    type: '',\n    //\"sucess\" | \"fail\"\n    message: ''\n  });\n\n  const showNotification = _ref2 => {\n    let {\n      type,\n      message\n    } = _ref2;\n    setState({\n      type,\n      message\n    });\n    setTimeout(clearNotification, 3000);\n  };\n\n  const clearNotification = () => {\n    setState({\n      type: '',\n      //\"sucess\" | \"fail\"\n      message: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      notification: { ...state\n      },\n      showNotification\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NotificationContextProvider, \"Jc6eZmR+N9301/piXLu0hQ3XnRA=\");\n\n_c = NotificationContextProvider;\nexport { NotificationContextProvider, Context as NotificationContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationContextProvider\");","map":{"version":3,"sources":["/home/user/Desktop/GardianNews/src/NotificationContent.js"],"names":["React","useState","Context","createContext","NotificationContextProvider","children","state","setState","type","message","showNotification","setTimeout","clearNotification","notification","NotificationContext"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,OAAO,gBAAGF,KAAK,CAACG,aAAN,EAAhB;;AAEA,MAAMC,2BAA2B,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAChD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAE;AAChCO,IAAAA,IAAI,EAAE,EAD0B;AACtB;AACVC,IAAAA,OAAO,EAAE;AAFuB,GAAF,CAAlC;;AAKA,QAAMC,gBAAgB,GAAG,SAAqB;AAAA,QAApB;AAACF,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAAoB;AAC1CF,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAAD,CAAR;AACAE,IAAAA,UAAU,CAACC,iBAAD,EAAoB,IAApB,CAAV;AACH,GAHD;;AAKA,QAAMA,iBAAiB,GAAG,MAAM;AAC5BL,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAE,EADD;AACK;AACVC,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,sBACI,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAG;AAACI,MAAAA,YAAY,EAAE,EAAC,GAAGP;AAAJ,OAAf;AAA2BI,MAAAA;AAA3B,KAA1B;AAAA,cACKL;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvBD;;GAAMD,2B;;KAAAA,2B;AAyBN,SAAQA,2BAAR,EAAqCF,OAAO,IAAIY,mBAAhD","sourcesContent":["import React, {useState} from \"react\";\n\nconst Context = React.createContext();\n\nconst NotificationContextProvider = ({children}) => {\n    const [state, setState] = useState ({\n        type: '', //\"sucess\" | \"fail\"\n        message: '',\n    })\n\n    const showNotification = ({type, message}) => {\n        setState({type, message});\n        setTimeout(clearNotification, 3000);\n    };\n\n    const clearNotification = () => {\n        setState({\n            type: '', //\"sucess\" | \"fail\"\n            message: '',\n        })\n    }\n\n    return (\n        <Context.Provider value={ {notification: {...state}, showNotification }}>\n            {children}\n        </Context.Provider>\n    );\n}\n\nexport {NotificationContextProvider, Context as NotificationContext}"]},"metadata":{},"sourceType":"module"}